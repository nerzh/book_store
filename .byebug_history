continue
user.orders.first.order_billing_address
order.save
user.orders.first.order_billing_address =  order_billing_address
order_billing_address
user.orders.first.order_billing_address
continue
order.model_name
user.orders.first.order_billing_address
user.save
user.orders.first.order_billing_address =  order_billing_address
user.save
user.orders.first.order_billing_address =  order_billing_address
user.orders.first.order_billing_address
user.orders.first.order_billing_address =  order_billing_address
user.orders.first.order_billing_address
user.orders.first.save
user.orders.first.order_billing_address =  order_billing_address
user.orders.first.order_billing_address.delete
order_billing_address
user.orders.first
user.orders.first.order_billing_address
continue
user.orders.first.order_billing_address
user.orders.first
order_billing_address
continue
order_billing_address
user.orders.first
user.orders.first.order_billing_address
continue
user.save
user.orders.first.order_billing_address
user.orders.first.order_billing_address =  order_billing_address
user.orders.first.order_billing_address
user.orders.first
user.orders
user
order
order.order_billing_address
order_billing_address
user.orders.last
order.order_billing_address
user.orders.last.order_billing_address
user.orders.last
user.save
self_model.update
self_model.save
self_model
order
order.save
self_model.valid?
order.valid?
continue
order.save
order.valid?
order.errors
continue
order.errors
self_model.valid?
order.valid?
order.save
user
credit_card
order
self_model
continue
self.build_order_billing_address( order_id: self.id )
self.id
continue
self_model.save
self_model.valid?
self_model
continue
models
models.uniq!
models
continue
models.uniq!
models
continue
self.order.order_shipping_address
self.order_shipping_address
method( self.class.snake(CreditCard.to_s) ).call
method( self.class.snake(OrderShippingAddress.to_s) ).call
OrderShippingAddress
method( self.class.snake(OrderShippingAddress.to_s) ).call
method( self.class.snake(OrderBillingAddress.to_s) ).call
method(OrderBillingAddress.to_s.downcase).call
method(Order.to_s.downcase).call
method(User.to_s.downcase).call
method(model.to_s.downcase).call
method(model.to_s.downcase)
continue
self.order
order
continue
order.order_billing_address
continue
order.credit_card
order.order_billing_address
order.
order_billing_address
continue
order_billing_address
continue
params
model_attributes
update_attributes(params)
method(model.to_s.downcase).call.assign_attributes(update_attributes)
params.slice(*model_attributes)
model_attributes
params
hash_attributes
update_attributes
continue
method(model.to_s.downcase).call
method(model.to_s.downcase)
model
continue
@checkout_form.order_billing_address_street='fff'
@checkout_form.order_billing_address_street
@checkout_form.order_billing_address_phone
continue
model.to_s.downcase.to_sym
model.to_s.downcase.to_sym
attr
continue
attr
continue
@checkout_form.order_billing_address_phone
continue
@checkout_form.order_billing_address_phone = 'qqq'
@checkout_form.order_billing_address_phone
@checkout_form.order_billing_address
@checkout_form.order_billing
@checkout_form.order_billing_address_phone
@checkout_form.methods
@checkout_form.snake('AddCaa').to_sym
@checkout_form.snake('AddCaa')
@checkout_form
@checkout_form.order_billing_address_street
continue
@checkout_form.order_billing_address_street
continue
@checkout_form.order_billing_address_street
@checkout_form
@checkout_form.order
@checkout_form.order._reflections.keys
continue
@checkout_form.order._reflections.keys
@checkout_form.order._reflections
@checkout_form.order.reflections
@checkout_form.order
@checkout_form.column_names
@checkout_form.order_billing_first_name.itself
@checkout_form.order_billing_first_name.methods
@checkout_form.order_billing_first_name.class
@checkout_form.order_billing_first_name
continue
@checkout_form.errors
@checkout_form.valid?
@checkout_form.order_billing_address.first_name = nil
@checkout_form.valid?
@checkout_form.credit_card
continue
@checkout_form.user.credit_card
@checkout_form.order
@checkout_form.credit_card
continue
@checkout_form.order
@checkout_form.credit_card
@checkout_form.valid?
@checkout_form.order_billing_address.valid?
@checkout_form.order_billing_address.errors
continue
@checkout_form.order_billing_address.errors
@checkout_form.order_billing_address.valid?
@checkout_form.errors
@checkout_form.valid?
@checkout_form.validation_models
@checkout_form.valid?
@checkout_form.order_billing_address.valid?
@checkout_form.valid?
@checkout_form.order_billing_address.first_name = nil
@checkout_form.order_billing_address.first_name
@checkout_form.order
@checkout_form.valid?
@checkout_form
continue
@checkout_form.valid?
@checkout_form.order
@checkout_form
continue
@checkout_form.valid?
@checkout_form.order_billing_address.first_name = nil
@checkout_form.order_billing_address.first_name
@checkout_form.order_billing_first_name
@checkout_form.order_billing_first_name = nil
@checkout_form.order_billing_first_name
@checkout_form.valid?
@checkout_form.attributes
@checkout_form
continue
user
order.attributes
order
self.valid?
self.methods
self
self.attributes
continue
o.first
o
o = Order.where(user_id: current_user.id, aasm_state: 'in_progressa')
Order.where(user_id: current_user.id, aasm_state: 'in_progressa')
Order.where(user_id: current_user.id, aasm_state: 'in_progress')
Order.where(user_id: current_user.id, aasm_state: 'in_progressa')
Order.where(user_id: current_user.id, aasm_state: 'in_progress')
Order.where(user_id: cuerrent_user.id, aasm_state: 'in_progress')
current_user.orders
current_user
continue
session[:cart]['1']
session[:cart][1]
session[:cart]
continue
self.user.billing_address.attributes.slice('first_name')
self.user.billing_address.attributes.slice(:first_name)
self.user.billing_address.attributes
self.user.billing_address.attributes.slice(:first_name, :last_name, :street)
self.user.attributes.slice(:first_name)
self.user.attributes.slice(:first_name, :last_name, :street)
   51:                                                                   :city, :country_id, :zip, :phone)
self.user.attributesslice(:first_name, :last_name, :street,
self.user.attributes
self.user
billing_attr
continue
current_user
continue
self.current_user
current_user
methods
self
self.class
session
User.all
User.first
User.all.first
User.all
session[:cart]
sessiion[:cart]
user_signed_in?
@current_user
current_user
